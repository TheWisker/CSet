# This is the build file for project "CSet++"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.8.2

# Rules for module scanning.

# Rules for compiling.

rule cpp_COMPILER
 command = c++ $ARGS -MD -MQ $out -MF $DEPFILE -o $out -c $in
 deps = gcc
 depfile = $DEPFILE_UNQUOTED
 description = Compiling C++ object $out

# Rules for linking.

rule STATIC_LINKER
 command = rm -f $out && gcc-ar $LINK_ARGS $out $in
 description = Linking static target $out

rule cpp_LINKER
 command = c++ $ARGS -o $out $in $LINK_ARGS
 description = Linking target $out

rule SHSYM
 command = /usr/bin/meson --internal symbolextractor /home/kopi/GitHub/CSet++/bin $in $IMPLIB $out $CROSS
 description = Generating symbol file $out
 restat = 1

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = /usr/bin/meson --internal regenerate /home/kopi/GitHub/CSet++ /home/kopi/GitHub/CSet++/bin
 description = Regenerating build files.
 generator = 1

# Phony build target, always out of date

build PHONY: phony 

# Build rules for targets

build libdynamic_cset.so.p/libdynamic_cset.so.symbols: SHSYM libdynamic_cset.so
 IMPLIB = libdynamic_cset.so

build libdynamic_cset.so: cpp_LINKER 
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -shared -fPIC -Wl,--start-group -Wl,-soname,libdynamic_cset.so -Wl,--end-group

build libstatic_cset.a: STATIC_LINKER 
 LINK_ARGS = csrD

build test_set.p/test_set.cpp.o: cpp_COMPILER .././test/set.cpp
 DEPFILE = test_set.p/test_set.cpp.o.d
 DEPFILE_UNQUOTED = test_set.p/test_set.cpp.o.d
 ARGS = -Itest_set.p -I. -I.. -I../include -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O0 -g

build test_set: cpp_LINKER test_set.p/test_set.cpp.o
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined

build benchmark_set.p/benchmark_set.cpp.o: cpp_COMPILER .././benchmark/set.cpp
 DEPFILE = benchmark_set.p/benchmark_set.cpp.o.d
 DEPFILE_UNQUOTED = benchmark_set.p/benchmark_set.cpp.o.d
 ARGS = -Ibenchmark_set.p -I. -I.. -I../include -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O0 -g

build benchmark_set: cpp_LINKER benchmark_set.p/benchmark_set.cpp.o
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined

# Test rules

build test: phony meson-internal__test

build meson-internal__test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build benchmark: phony meson-internal__benchmark

build meson-internal__benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

# Install rules

build install: phony meson-internal__install

build meson-internal__install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/bin/meson install --no-rebuild
 pool = console

build dist: phony meson-internal__dist

build meson-internal__dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/bin/meson dist
 pool = console

# Suffix

build uninstall: phony meson-internal__uninstall

build meson-internal__uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal uninstall
 pool = console

build all: phony meson-test-prereq meson-benchmark-prereq libdynamic_cset.so libstatic_cset.a test_set benchmark_set

build meson-test-prereq: phony test_set

build meson-benchmark-prereq: phony benchmark_set

build clean: phony meson-internal__clean

build meson-internal__clean: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/ninja -t clean
 description = Cleaning

build build.ninja: REGENERATE_BUILD ../meson.build /usr/bin/doxygen ../doxygen.conf meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build /usr/bin/doxygen ../doxygen.conf meson-private/coredata.dat: phony 

default all

